// box
@mixin bx($w: auto, $h: auto) {
  width: $w + px;
  height: $h + px;
}
@mixin mbx($w: auto, $h: auto) {
  min-width: $w + px;
  min-height: $h + px;
}
// border
@mixin border($p: "", $w: 1px, $k: solid, $c: transparent) {
  border#{$p}: $w $k $c;
  @content;
}

// bg
@mixin bg($x, $y, $url: "", $c: transparent, $s: 100% 100%) {
  @include bx($x, $y);
  background-image: url($url);
  background-repeat: no-repeat;
  background-color: $c;
  background-position: center center;
  background-size: $s;
}
@mixin svg($x, $y, $file) {
  @include bg($x, $y, $url: $svg + $file + ".svg", $s: 100%);
}

// on/off
@mixin on($x, $y, $file: "") {
  @include bg($x, $y, $img + $file + "_off.png");

  &.on {
    background-image: url($img+$file+"_on.png");
  }
}
@mixin on-icon($x, $y, $file: "") {
  @include bg($x, $y, $icon + $file + "_off.png");

  &.on {
    background-image: url($icon+$file+"_on.png");
  }
}

// icon
@mixin icon($p, $x, $y, $url: "", $s: 0, $urla: "") {
  @include flex-s-c;

  &::#{$p} {
    @include bg($x, $y, $url);
    content: "";

    @if $p == "after" {
      margin-left: $s + px;
    } @else {
      margin-right: $s + px;
    }
  }

  &.active {
    &::#{$p} {
      background-image: url($urla);
    }
  }
}

// layout - center
@mixin center {
  width: $min-width;
  margin: 0 auto;
}

@mixin center-posi($p: fixed) {
  transform: translate(-50%, -50%);
  position: $p;
  left: 50%;
  top: 50%;
}

// scroll
@mixin scroll($p: x) {
  overflow: hidden;
  overflow-#{$p}: auto;
}

// flex
@mixin flex($x: initial, $y: initial, $d: initial, $wrap: initial) {
  display: flex;
  justify-content: $x;
  align-items: $y;
  flex-direction: $d;
  flex-wrap: $wrap;
  @content;
}
@mixin flex-c {
  @include flex($x: center, $y: center);
  @content;
}
@mixin flex-around {
  @include flex($x: space-around);
  @content;
}
@mixin flex-around-c {
  @include flex($x: space-around, $y: center);
  @content;
}
@mixin flex-between {
  @include flex($x: space-between);
  @content;
}
@mixin flex-between-c {
  @include flex($x: space-between, $y: center);
  @content;
}
@mixin flex-s-c {
  @include flex($x: flex-start, $y: center);
  @content;
}
@mixin flex-e-s {
  @include flex($x: flex-end, $y: flex-start);
  @content;
}
@mixin flex-e-c {
  @include flex($x: flex-end, $y: center);
  @content;
}
@mixin flex-s-e {
  @include flex($x: flex-start, $y: flex-end);
  @content;
}
@mixin flex-e {
  @include flex($x: flex-end, $y: flex-end);
  @content;
}
@mixin flex-c-s {
  @include flex($x: center, $y: flex-start);
  @content;
}
@mixin full {
  @include flex;
  flex-direction: column;
  flex: 1;
}

// ellipsis
// 멀티라인 말줄임 표시
// $line-cnt : 라인 수
// $line-height : line-height값
// 사용법 : @include ellipsis(3, 1.6em);
@mixin ellipsis($line-cnt, $line-height) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  line-clamp: $line-cnt; /* 라인수 */
  -webkit-line-clamp: $line-cnt; /* 라인수 */
  -webkit-box-orient: vertical;
  line-height: $line-height;
  height: $line-height * $line-cnt; /* line-height 가 1.2em 이고 3라인을 자르기 때문에 height는 1.2em * 3 = 3.6em */
}

// box space
@mixin list-space($s: auto, $t: "margin", $x: "right") {
  #{$t}#{"-"}#{$x}: $s + px;

  @if $x == "right" {
    &:last-child {
      #{$t}#{"-"}#{$x}: 0;
    }
  }
  @if $x == "left" {
    &:first-child {
      #{$t}#{"-"}#{$x}: 0;
    }
  } @else {
    &:last-child {
      #{$t}#{"-"}#{$x}: 0;
    }
  }
}

// font awesome
@mixin awesome($ic) {
  display: inline-flex;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: $ic;
}

// hide
@mixin hide {
  position: absolute;
  left: -9999em;
  top: -9999em;
  z-index: -1;
}

// ab-posi
@mixin posi($p: absolute, $l: initial, $t: initial, $x: 0, $y: 0) {
  transform: translate($x, $y);
  position: $p;
  left: $l;
  top: $t;
  z-index: 1;
}
@mixin posi-x-c {
  @include posi($l: 50%, $x: -50%);
}
@mixin posi-y-c {
  @include posi($t: 50%, $y: -50%);
}
@mixin posi-c {
  @include posi($l: 50%, $t: 50%, $y: -50%, $x: -50%);
}

// transition all
@mixin t-all($d: 0.3, $type: all) {
  transition: $type $d + s;
}

// box shadow
@mixin bx-shadow($s: 1px 1px 5px, $c: #000000, $a: 0.8) {
  box-shadow: $s rgba($color: $c, $alpha: $a);
}

// transition
@mixin transition-setting($duration: 0.3s, $type: "") {
  transition-duration: 0.3s;
  transition: background-color $duration, color $duration,
    border-color $duration, width $duration, $type;
}

// line horizontal
@mixin line($s) {
  position: relative;
  @include list-space($s, $t: "padding");

  &::after {
    transform: translateY(-50%);
    position: absolute;
    right: ($s / 2) + px;
    top: 50%;
    content: "";
    width: 1px;
    height: 10px;
    background-color: var(--color-grey);
  }

  &:last-child {
    &::after {
      display: none;
    }
  }
}
